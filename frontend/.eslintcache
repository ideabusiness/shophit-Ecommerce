[{"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\index.js":"1","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\App.js":"2","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reportWebVitals.js":"3","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Footer.js":"4","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Header.js":"5","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\Home.js":"6","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Product.js":"7","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Rating.js":"8","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ProductScreen.js":"9","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\store.js":"10","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\productReducers.js":"11","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\productConstants.js":"12","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\ProductActions.js":"13","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Loader.js":"14","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Message.js":"15","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\CartScreen.js":"16","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\cartReducers.js":"17","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\cartConstants.js":"18","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\cartAction.js":"19","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\userReducers.js":"20","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\usersConstant.js":"21","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\LoginScreen.js":"22","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\FormContainer.js":"23","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\usersAction.js":"24","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\registerScreen.js":"25","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ProfileScreen.js":"26","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\RegisterScreen.js":"27","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ShippingScreen.js":"28","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\CheckoutStep.js":"29","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\PaymentScreen.js":"30","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\orderReducers.js":"32","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\orderConstants.js":"33","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\orderActions.js":"34","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\OrderScreen.js":"35","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Meta.js":"36","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\SearchBox.js":"37","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Paginate.js":"38","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\ProductCarousel.js":"39","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\utils\\validationSchema.js":"40","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\UserListScreen.js":"41","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\UserEditScreen.js":"42","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\AdminProductList.js":"43","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ProductEditScreen.js":"44","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\AdminOrderList.js":"45","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\NotFoundScreen.js":"46"},{"size":669,"mtime":1613198845125,"results":"47","hashOfConfig":"48"},{"size":2648,"mtime":1613285989223,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1607858753383,"results":"50","hashOfConfig":"48"},{"size":334,"mtime":1611917760521,"results":"51","hashOfConfig":"48"},{"size":4192,"mtime":1613027189992,"results":"52","hashOfConfig":"48"},{"size":1657,"mtime":1612865606718,"results":"53","hashOfConfig":"48"},{"size":876,"mtime":1612337790995,"results":"54","hashOfConfig":"48"},{"size":1578,"mtime":1612342113727,"results":"55","hashOfConfig":"48"},{"size":8587,"mtime":1613280250697,"results":"56","hashOfConfig":"48"},{"size":2400,"mtime":1613120092606,"results":"57","hashOfConfig":"48"},{"size":3859,"mtime":1613102599336,"results":"58","hashOfConfig":"48"},{"size":1666,"mtime":1613055924881,"results":"59","hashOfConfig":"48"},{"size":5704,"mtime":1613129818862,"results":"60","hashOfConfig":"48"},{"size":579,"mtime":1612846965420,"results":"61","hashOfConfig":"48"},{"size":252,"mtime":1612502661454,"results":"62","hashOfConfig":"48"},{"size":4942,"mtime":1612851356697,"results":"63","hashOfConfig":"48"},{"size":1149,"mtime":1612694473192,"results":"64","hashOfConfig":"48"},{"size":242,"mtime":1612694323360,"results":"65","hashOfConfig":"48"},{"size":1264,"mtime":1612694410324,"results":"66","hashOfConfig":"48"},{"size":3510,"mtime":1613131508200,"results":"67","hashOfConfig":"48"},{"size":1455,"mtime":1613040209903,"results":"68","hashOfConfig":"48"},{"size":3390,"mtime":1613027965771,"results":"69","hashOfConfig":"48"},{"size":350,"mtime":1612676277698,"results":"70","hashOfConfig":"48"},{"size":6687,"mtime":1613129833544,"results":"71","hashOfConfig":"48"},{"size":3411,"mtime":1612689446610,"results":"72","hashOfConfig":"73"},{"size":6980,"mtime":1613197806495,"results":"74","hashOfConfig":"48"},{"size":4920,"mtime":1613195879759,"results":"75","hashOfConfig":"48"},{"size":3276,"mtime":1613022743159,"results":"76","hashOfConfig":"48"},{"size":2336,"mtime":1612773647469,"results":"77","hashOfConfig":"48"},{"size":1692,"mtime":1612774086574,"results":"78","hashOfConfig":"48"},{"size":5302,"mtime":1613130430628,"results":"79","hashOfConfig":"48"},{"size":3126,"mtime":1613190332322,"results":"80","hashOfConfig":"48"},{"size":1350,"mtime":1613190286158,"results":"81","hashOfConfig":"48"},{"size":5555,"mtime":1613129559461,"results":"82","hashOfConfig":"48"},{"size":8185,"mtime":1613190846651,"results":"83","hashOfConfig":"48"},{"size":562,"mtime":1612850698252,"results":"84","hashOfConfig":"48"},{"size":837,"mtime":1612860990390,"results":"85","hashOfConfig":"48"},{"size":850,"mtime":1612862564758,"results":"86","hashOfConfig":"48"},{"size":1234,"mtime":1613199170715,"results":"87","hashOfConfig":"48"},{"size":599,"mtime":1613195962649,"results":"88","hashOfConfig":"48"},{"size":3377,"mtime":1613299300537,"results":"89","hashOfConfig":"48"},{"size":3244,"mtime":1613042907727,"results":"90","hashOfConfig":"48"},{"size":4435,"mtime":1613299264234,"results":"91","hashOfConfig":"48"},{"size":6420,"mtime":1613281677403,"results":"92","hashOfConfig":"48"},{"size":3132,"mtime":1613119470730,"results":"93","hashOfConfig":"48"},{"size":453,"mtime":1613283990547,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"13vjqqj",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e6tx82",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\index.js",[],["192","193"],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\App.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reportWebVitals.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Footer.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Header.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\Home.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Product.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Rating.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ProductScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\store.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\productReducers.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\productConstants.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\ProductActions.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Loader.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Message.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\CartScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\cartConstants.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\cartAction.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\userReducers.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\usersConstant.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\LoginScreen.js",["194"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Message from \"../components/Message.js\";\r\nimport Loader from \"../components/Loader.js\";\r\nimport { login } from \"../actions/usersAction.js\";\r\nimport FormContainer from \"../components/FormContainer.js\";\r\nimport { validationSchema } from \"../utils/validationSchema\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => {\r\n    return state.userLogin;\r\n  });\r\n  const { error, loading, userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = ({ email, password }, { setSubmitting }) => {\r\n    setSubmitting(true);\r\n    //disptach login\r\n    dispatch(login(email, password));\r\n    setSubmitting(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Meta title=\"Welcome to ShopHit | Login\" />\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        onSubmit={submitHandler}\r\n      >\r\n        {({\r\n          touched,\r\n          handleBlur,\r\n          handleChange,\r\n          errors,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          values,\r\n        }) => (\r\n          <FormContainer>\r\n            <h1>Sign in</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Email\"\r\n                  value={values.email}\r\n                  name=\"email\"\r\n                  className={\r\n                    errors.email && touched.email ? \"invalid\" : \"valid\"\r\n                  }\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? \"invalid\" : \"valid\"\r\n                  }\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"primary\" disabled={isSubmitting}>\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n              <Col>\r\n                New Customer ?{\" \"}\r\n                <Link\r\n                  to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n                >\r\n                  Register\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </FormContainer>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\FormContainer.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\usersAction.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\registerScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ProfileScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\RegisterScreen.js",["195"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/usersAction\";\r\nimport { validationSchema } from \"../utils/validationSchema\";\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = ({ name, password, email }, { setSubmitting }) => {\r\n    setSubmitting(true);\r\n    dispatch(register(name, email, password));\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      validationSchema={validationSchema}\r\n      initialValues={{ name: \"\", email: \"\", password: \"\", confirmPassword: \"\" }}\r\n      onSubmit={submitHandler}\r\n    >\r\n      {({\r\n        touched,\r\n        values,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        errors,\r\n      }) => (\r\n        <FormContainer>\r\n          <h1>Sign Up</h1>\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>username</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={values.name}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                className={errors.name && touched.name ? \"invalid\" : \"valid\"}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {errors.name && touched.name && (\r\n              <p style={{ color: \"red\" }}>{errors.name}</p>\r\n            )}\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={errors.email && touched.email ? \"invalid\" : \"valid\"}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {errors.email && touched.email && (\r\n              <p style={{ color: \"red\" }}>{errors.email}</p>\r\n            )}\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                className={\r\n                  errors.password && touched.password ? \"invalid\" : \"valid\"\r\n                }\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {errors.password && touched.password && (\r\n              <p style={{ color: \"red\" }}>{errors.password}</p>\r\n            )}\r\n\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                value={values.confirmPassword}\r\n                name=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={\r\n                  errors.confirmPassword && touched.confirmPassword\r\n                    ? \"invalid\"\r\n                    : \"valid\"\r\n                }\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {errors.confirmPassword && touched.confirmPassword && (\r\n              <p style={{ color: \"red\" }}>{errors.confirmPassword}</p>\r\n            )}\r\n\r\n            <Button type=\"submit\" variant=\"primary\" disabled={isSubmitting}>\r\n              Register\r\n            </Button>\r\n          </Form>\r\n\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              Have an Account?{\" \"}\r\n              <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n                Login\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </FormContainer>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ShippingScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\CheckoutStep.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\PaymentScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\PlaceOrderScreen.js",["196"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutStep from \"../components/CheckoutStep\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => {\r\n    return state.cart;\r\n  });\r\n  // calculate prices\r\n  const addDecimal = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  cart.itemsPrice = addDecimal(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = cart.itemsPrice < 100 ? 0 : 20;\r\n\r\n  cart.taxPrice = addDecimal(Number((0.004 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => {\r\n    return state.orderCreate;\r\n  });\r\n\r\n  const { order, success, error } = orderCreate;\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success]);\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CheckoutStep step1 step2 step3 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                {cart.shippingAddress.zip}, {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method:</strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty ):</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, i) => {\r\n                    return (\r\n                      <ListGroup.Item key={i}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              fluid\r\n                              rounded\r\n                              alt={item.name}\r\n                            ></Image>\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  variant=\"outline-info\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\constants\\orderConstants.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\actions\\orderActions.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\OrderScreen.js",["197"],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => {\r\n    return state.orderDetails;\r\n  });\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const userLogin = useSelector((state) => {\r\n    return state.userLogin;\r\n  });\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDeliver = useSelector((state) => {\r\n    return state.orderDeliver;\r\n  });\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const orderPay = useSelector((state) => {\r\n    return state.orderPay;\r\n  });\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  console.log(order && order.user.name);\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    const addPayPalScripts = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.async = true;\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScripts();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [orderId, dispatch, successPay, order, successDeliver]);\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <Message variant=\"info\"> Order Id:{order._id}</Message>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name:</strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>\r\n\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                {order.shippingAddress.zip}, {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  {\" \"}\r\n                  Delivered on{\" \"}\r\n                  {moment(order.deliveredAt).format(\"MMM Do, YYYY HH:mm:ss a\")}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered ):</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">\r\n                  Paid on{\" \"}\r\n                  {moment(order.paidAt).format(\"MMM Do, YYYY HH:mm:ss a\")}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid):</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Your order is empty ):</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, i) => {\r\n                    return (\r\n                      <ListGroup.Item key={i}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              fluid\r\n                              rounded\r\n                              alt={item.name}\r\n                            ></Image>\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Meta.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\SearchBox.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\Paginate.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\components\\ProductCarousel.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\utils\\validationSchema.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\UserListScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\UserEditScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\AdminProductList.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\ProductEditScreen.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\AdminOrderList.js",[],"F:\\MERN-Ecommerce\\shop-hit\\frontend\\src\\screens\\NotFoundScreen.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":10,"column":10,"nodeType":"204","messageId":"205","endLine":10,"endColumn":26},{"ruleId":"202","severity":1,"message":"206","line":12,"column":19,"nodeType":"204","messageId":"205","endLine":12,"endColumn":29},{"ruleId":"207","severity":1,"message":"208","line":40,"column":6,"nodeType":"209","endLine":40,"endColumn":24,"suggestions":"210"},{"ruleId":"202","severity":1,"message":"211","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":23},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'validationSchema' is defined but never used.","Identifier","unusedVar","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'LinkContainer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},"Update the dependencies array to be: [history, order._id, success]",{"range":"217","text":"218"},[1266,1284],"[history, order._id, success]"]